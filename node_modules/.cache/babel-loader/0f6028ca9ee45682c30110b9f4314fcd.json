{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mahie\\\\Desktop\\\\ReactProjects\\\\movie-list-react\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  // 2. we create a new constant to store the transformed data \n  const [movies, setMovies] = useState([]); // 1. this is us fetching the data from the api\n\n  function fetchMoviesHandler() {\n    fetch('https://swapi.dev/api/films').then(response => {\n      return response.json();\n    }).then(data => {\n      // 4. Because there is a difference between how the data is \n      // presented in the MoviesList.js component, we have to either\n      // change the way its set up there to match the data we will receive \n      // or change the the way we receive the data here. we chose option 2.     \n      const transformedMovies = data.results.map(movieData => {\n        return {};\n      }); // 3. here we set the transformed data to the new state\n\n      setMovies(data.results);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/mahie/Desktop/ReactProjects/movie-list-react/src/App.js"],"names":["React","useState","MoviesList","App","movies","setMovies","fetchMoviesHandler","fetch","then","response","json","data","transformedMovies","results","map","movieData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC,CAFa,CAIb;;AACA,WAASK,kBAAT,GAA8B;AAC5BC,IAAAA,KAAK,CAAC,6BAAD,CAAL,CAAqCC,IAArC,CAA0CC,QAAQ,IAAI;AACpD,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAFD,EAEGF,IAFH,CAEQG,IAAI,IAAI;AAEd;AACA;AACA;AACA;AACA,YAAMC,iBAAiB,GAAGD,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAiBC,SAAS,IAAI;AACtD,eAAO,EAAP;AAGD,OAJyB,CAA1B,CANc,CAYd;;AACAV,MAAAA,SAAS,CAACM,IAAI,CAACE,OAAN,CAAT;AACD,KAhBD;AAiBD;;AAED,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAET,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF;AAUD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  // 2. we create a new constant to store the transformed data \n  const [movies, setMovies] = useState([]); \n\n  // 1. this is us fetching the data from the api\n  function fetchMoviesHandler() {\n    fetch('https://swapi.dev/api/films').then(response => {\n      return response.json();\n    }).then(data => {\n\n      // 4. Because there is a difference between how the data is \n      // presented in the MoviesList.js component, we have to either\n      // change the way its set up there to match the data we will receive \n      // or change the the way we receive the data here. we chose option 2.     \n      const transformedMovies = data.results.map(movieData => {\n        return {\n\n        };\n      });\n\n      // 3. here we set the transformed data to the new state\n      setMovies(data.results);\n    });\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button>Fetch Movies</button>\n      </section>\n      <section>\n        <MoviesList movies={movies} />\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}